server {
  listen 8282;

  server_name lastlog;

  default_type application/json;

  location /lastlog/json {
    content_by_lua_block {
      local lastlog = require "lastlog"
      local cjson = require "cjson"
      local req_stat, ups_stat, http_x = lastlog.get_statistic()
      ngx.say(cjson.encode({ requests_statistic = req_stat, upstream_staistic = ups_stat, http_x = http_x }))
    }
  }

  location /lastlog/text {
    content_by_lua_block {
      local lastlog = require "lastlog"
      local cjson = require "cjson"

      local req_stat, ups_stat, http_x = lastlog.get_statistic()

      ngx.say("Upstreams")

      for u, peers in pairs(ups_stat)
      do
        ngx.say("    " .. u)
        for peer, data in pairs(peers)
        do
          ngx.say("        server " .. peer)
          for status, stat in pairs(data)
          do
            ngx.say("            http_" .. status .. " : count=" .. stat.count .. ", latency=" .. stat.latency)
          end
          ngx.say()
        end
      end

      ngx.say("Requests")
      for status, peers in pairs(http_x)
      do
        ngx.say("    http_" .. status)
        for _, data in ipairs(peers)
        do
          ngx.say(string.format("        %-.4f : %8d : %s", data.stat.latency, data.stat.count, data.uri))
        end
        ngx.say()
      end
    }
  }
}